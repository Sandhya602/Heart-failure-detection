# Import required libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import pickle

# Sample dataset (replace with actual dataset CSV if available)
# This sample data follows the structure of the UCI Heart Failure dataset
data = {
    'age': [75, 55, 65, 50, 45],
    'anaemia': [0, 1, 1, 0, 0],
    'creatinine_phosphokinase': [582, 7861, 146, 111, 160],
    'diabetes': [0, 0, 0, 1, 1],
    'ejection_fraction': [20, 38, 20, 20, 38],
    'high_blood_pressure': [1, 0, 0, 0, 1],
    'platelets': [265000, 263358, 162000, 210000, 327000],
    'serum_creatinine': [1.9, 1.1, 1.3, 1.9, 2.7],
    'serum_sodium': [130, 136, 129, 137, 116],
    'sex': [1, 1, 1, 1, 0],
    'smoking': [0, 0, 1, 0, 0],
    'time': [4, 6, 7, 7, 8],
    'DEATH_EVENT': [1, 1, 1, 0, 1]
}

# Create DataFrame
df = pd.DataFrame(data)

# Split features and target
X = df.drop('DEATH_EVENT', axis=1)
y = df['DEATH_EVENT']

# Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Random Forest model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Save the model to a .pkl file
with open('heart_failure_model.pkl', 'wb') as file:
    pickle.dump(model, file)

print("âœ… Model trained and saved as 'heart_failure_model.pkl'")

